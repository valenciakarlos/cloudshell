/// <param name="reservation">
/// A predefined matrix with the following columns: attribute, mandatory / optional (empty is mandatory), value - this column will be automatically populated when executing the command.
/// </param>
/// <param name="connectivityInfo">
/// Quali Server connectivity information. A predefined matrix with the following columns: parameter, mandatory / optional (empty is mandatory), value - this column will be automatically populated when executing the command.
/// </param>
/// <param name="AllResources">
/// </param>
OnRackWrapper(string [,] reservation, string [,] connectivityInfo, out string [,] AllResources)
#region /* User defined variables */
string[,] AllResources = "[""; ]"
/*A predefined matrix with the following columns: attribute, mandatory / optional (empty is mandatory), value - this column will be automatically populated when executing the command.*/
string[,] reservation = "["Username", "", ""; "Password", "", ""; "Domain", "", ""; "ReservationId", "", ""; "TopologyPath", "", ""; ]"
/*Quali Server connectivity information. A predefined matrix with the following columns: parameter, mandatory / optional (empty is mandatory), value - this column will be automatically populated when executing the command.*/
string[,] connectivityInfo = "["ServerAddress", "", ""; "TestShellApiPort", "", ""; "QualiApiPort", "", ""; ]"
string onrackservice = ""
#endregion

/* Main flow/s */
{
    try
    {
    #region /* ------ Thread Start ------ */
        /* Start (Start) */
    
        
        /*Path: ..\Custom Commands\OnRack */
        OnRack1(reservation: {reservation}, globalInputs: null, requirementsInputs: null, additionalInfoInputs: null, connectivityInfo: {connectivityInfo}, out out /*[Create Variable]*/)
        
        OnRack1_Transform1(out1: {OnRack1.out}, out Measurement1: {AllResources})
    #endregion /* ------- Thread End ------- */
    
    }
    catch (({lastError.Description} Contains "The API was not initialized properly and must be initialized")) // api not initialized
    {
        /* Action Type: PaWRunFunction */
        API_Login(reservation: {reservation})
        If action succeeds, retry Step in 1 seconds, a maximum of 1 times
        If step still fails: End Step with error and continue
    }
    catch (General) // End test if any error occurs
    {
        If step still fails: End Function with error and continue
    }
}

/* Functions */

OnRack1_Transform1()
{
/* ------ Transformation Flows ------ */
/* Flow 0 (Input: out1, Output: Measurement1) */
/* Step 0 */
String To Matrix - By Delimiter(Row Delimiter: "%0A%0D", Column Delimiter: "|", Regular Expression: False, Start at index: 0, Treat consecutive delimiters as one: False, Text qualifier: None)

/*------ Transformation Flows End ------ */
}
