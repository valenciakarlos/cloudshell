
GetApiToken()
#region /* User defined variables */
Session s_json
string response = ""
string json = ""
#endregion

/* Main flow/s */
{
#region /* ------ Thread Start ------ */
    /* Start (Start) */
    {json} = "-k -X POST -H "Content-Type:application/json" https://"{Project.OnRackServer}"/login -d ""{"{"}"\"email\":\""{Project.OnRackUsername}"\",\"password\":\""{Project.OnRackPassword}"\"}""
    /*Path: ..\Functions\AddToLog */
    //AddToLog1(Level: "Debug", LogMessage: "json: "{json}, functionName: "GetApiToken")
    curl1 // (PaWExeTool)
    /*Path: ..\Functions\AddToLog */
    AddToLog2(Level: "Debug", LogMessage: "api token response: "{response}, functionName: "GetApiToken")
    /*Path: ..\Assets\JSON Editor */
    /*Dll: JSON Editor1*/
    {
        /* Start3 (Start) */
        /*SetSession: Set Session3*/
        Set_Session3(SessionName: {s_json}, SessionType: Dll, ConnectAction: ContinueOrStartSession, ExecutionFolder: SessionExecutionFolder, RuntimeVersion: Default, HostType: Out)
        /*Loads a JSON string to the library session.*/
        Load_JSON1(JSON String: {response}, out JSON String /*[Create Variable]*/)
        
        /*Converts the session JSON to XML string.*/
        GetToken(out XML String /*[Create Variable]*/)
        
        GetToken_Transform1(XmlString1: {GetToken.XmlString}, out Measurement1 /*[Create Variable]*/)
        /*EndSession: End Session1*/
        End_Session1(SessionName: {s_json}, Action: TerminateSelfStartedSession)
    }
    SetVariables()
#endregion /* ------- Thread End ------- */
}

/* Functions */

GetToken_Transform1()
{
/* ------ Transformation Flows ------ */
/* Flow 0 (Input: XmlString1, Output: Measurement1) */
/* Step 0 */
XML - Select Node(XPath: "/Root/response/user/authentication_token/text()", Return: First match)

/*------ Transformation Flows End ------ */
}
SetVariables()
{
/* ------ Matshell code ------ */
Project.APIKey = GetToken_Transform1.Measurement1

/* ---- Matshell code end ---- */
}
