/// <param name="TaskID">
/// </param>
/// <param name="MaxWaitSeconds">
/// </param>
WaitForTask(string TaskID, double MaxWaitSeconds)
#region /* User defined variables */
string TaskID = ""
string Status = ""
double MaxWaitSeconds = 0
string StartTime = ""
double PollInterval = 30
#endregion

/* Main flow/s */
{
#region /* ------ Thread Start ------ */
    /* Start (Start) */
    MatShell1()
    /*While: WhileTaskNotDone*/
    do
    {
        /*Case: HasTimedOut*/
        if (timediff(currenttime2str) > {MaxWaitSeconds})
        {
            /*Error: Error1*/
            throw Error1(Name: "Timeout", Description: "The operation has timed-out", End: Function)
            Break1 // (BreakTool)
        }
        else
        {
            /*Path: GetTaskStatus */
            GetTaskStatus1(TaskID: {TaskID}, out Status /*[Create Variable]*/)
            
            GetTaskStatus1_Transform1(Status1: {GetTaskStatus1.Status}, out Measurement1: {Status})
            Delay1(Delay: {PollInterval} seconds)
        }
    } while ({Status})
#endregion /* ------- Thread End ------- */
}

/* Functions */
MatShell1()
{
/* ------ Matshell code ------ */
Status = ''
StartTime = currenttime2str()
/* ---- Matshell code end ---- */
}

GetTaskStatus1_Transform1()
{
/* ------ Transformation Flows ------ */
/* Flow 0 (Input: Status1, Output: Measurement1) */
/* Step 0 */
Find by column value in table (VLookup)(Search in column number: 0, For value: "TaskState", Return value at column number: 1, Return Entire row: False, Regular Expression: False)

/*------ Transformation Flows End ------ */
}
