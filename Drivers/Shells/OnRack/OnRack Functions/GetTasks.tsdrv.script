/// <param name="TaskIDs">
/// </param>
GetTasks(out string [] TaskIDs)
#region /* User defined variables */
string curlCmd = ""
Session s_json
string[] Tasks = "["", "", "", "", "", "", "", "", "", ""]"
#endregion

/* Main flow/s */
{
#region /* ------ Thread Start ------ */
    /* Start (Start) */
    MatShell1()
    curl1 // (PaWExeTool)
    /*Path: ..\Assets\JSON Editor */
    /*Dll: JSON Editor1*/
    {
        /* Start1 (Start) */
        /*SetSession: Set Session1*/
        Set_Session1(SessionName: {s_json}, SessionType: Dll, ConnectAction: ContinueOrStartSession, ExecutionFolder: SessionExecutionFolder, RuntimeVersion: Default, HostType: Out)
        /*Loads a JSON string to the library session.*/
        Load_JSON1(JSON String: {curl1.Result}, out JSON String /*[Create Variable]*/)
        
        /*Converts the given JSON values to matrix.*/
        Convert_To_Matrix1(JPath: "Members[*]", Filter Columns: null, out Matrix /*[Create Variable]*/)
        
        Convert_To_Matrix1_Transform1(Matrix1: {Convert_To_Matrix1.Matrix}, out Measurement1: {Tasks})
        /*EndSession: End Session1*/
        End_Session1(SessionName: {s_json}, Action: TerminateSelfStartedSession)
    }
#endregion /* ------- Thread End ------- */
}

/* Functions */
MatShell1()
{
/* ------ Matshell code ------ */
curlCmd = '-s -k -X GET -H "Authentication-Token: '+Project.APIKey+'" https://'+Project.OnRackServer+'/rest/v1/ManagedSystems/TaskService/Tasks'

/* ---- Matshell code end ---- */
}
Convert_To_Matrix1_Transform1()
{
/* ------ Transformation Flows ------ */
/* Flow 0 (Input: Matrix1, Output: Measurement1) */
/* Step 0 */
Custom - Simple(Output: {input(1:end,0)}, Output Type: String, Output Dimension: Vector)
/* Step 1 */
Custom - Simple_1(Output: vect2str({input}), Output Type: String, Output Dimension: Scalar)
/* Step 2 */
String To Matrix - By Delimiter(Row Delimiter: newline, Column Delimiter: "/", Regular Expression: False, Start at index: 0, Treat consecutive delimiters as one: False, Text qualifier: None)
/* Step 3 */
Custom - Simple_2(Output: {input(0:end,(countcolumns({input}) - 1))}, Output Type: String, Output Dimension: Vector)

/*------ Transformation Flows End ------ */
}
